# Configuration for MMU2S using SKR Mini 1.2
#
# config heavily copied and edited from https://github.com/kakou-fr/mmu2_1S_klipper_config
# without kakou_fr's configs and work on klipper github this would have required a lot more work and debugging -- so thx 
#


# mmu2s board information 
[include mmu2s-board.cfg]

# mmu2s configuration
[include mmu2s-config.cfg]

# printer variables
[include printer-variables.cfg]

###############################
###############################

[gcode_macro ACTIVATE_EXTRUDER]
rename_existing: OACTIVATE_EXTRUDER
default_parameter_EXTRUDER: extruder
gcode:
    M118 Set extruder : {EXTRUDER}
    {% if EXTRUDER == "extruder" %}
        T0
    {% elif EXTRUDER == "extruder1" %}
        T1
    {% elif EXTRUDER == "extruder2" %}
        T2
    {% elif EXTRUDER == "extruder3" %}
        T3
    {% elif EXTRUDER == "extruder4" %}
        T4
    {% endif %}

###############################
###############################

[gcode_macro DISPLAY_ERROR]
gcode:
    M118 ->> Error Report <<-
    M118 Retry load     : {printer["gcode_macro MMU_ERROR_INCREMENT_LOAD"].error_retry_load}
    M118 Retry unload   : {printer["gcode_macro MMU_ERROR_INCREMENT_UNLOAD"].error_retry_unload}
    M118 Intervention   : {printer["gcode_macro MMU_ERROR_INCREMENT_PAUSE"].error_retry_pause}

[gcode_macro MMU_ERROR_INCREMENT_LOAD]
variable_error_retry_load: 0
gcode:
   {% set error = error_retry_load + 1 %}
   SET_GCODE_VARIABLE MACRO=MMU_ERROR_INCREMENT_LOAD VARIABLE=error_retry_load VALUE={error}

[gcode_macro MMU_ERROR_INCREMENT_UNLOAD]
variable_error_retry_unload: 0
gcode:
   {% set error = error_retry_unload + 1 %}
   SET_GCODE_VARIABLE MACRO=MMU_ERROR_INCREMENT_UNLOAD VARIABLE=error_retry_unload VALUE={error}

[gcode_macro MMU_ERROR_INCREMENT_PAUSE]
variable_error_retry_pause: 0
gcode:
   {% set error = error_retry_pause + 1 %}
   SET_GCODE_VARIABLE MACRO=MMU_ERROR_INCREMENT_PAUSE VARIABLE=error_retry_pause VALUE={error}

###############################
#
# MMU2S endstop status : IR extruder, FINDA, selector switch
# 0 : open, 1 : TRIGGERED
#
###############################

# Display the last queried status
[gcode_macro ENDSTOPS_STATUS]
gcode:
    M118 ->> Endstop Report <<-
    M118 Extruder : {printer["filament_switch_sensor ir_sensor"].filament_detected}
    M118 FINDA    : {printer.query_endstops.last_query["manual_stepper gear_stepper"]}
    M118 Selector : {printer.query_endstops.last_query["manual_stepper selector_stepper"]}

# Query and display the status
[gcode_macro infos]
gcode:
    QUERY_ENDSTOPS
    ENDSTOPS_STATUS

###############################
#
# PAUSE MACROS
# PAUSE_MMU is called when an human intervention is needed
# use MMU_UNLOCK to park the idler and start the manual intervention
# and use RESUME when the invention is ended to resume the current print
#
###############################

[pause_resume]
#recover_velocity: 50.

# park the idler, stop the delayed stop of the heater
[gcode_macro MMU_UNLOCK]
gcode:
   M118 Resume print
   SET_GCODE_VARIABLE MACRO=PAUSE_MMU VARIABLE=is_paused VALUE=0
   UPDATE_DELAYED_GCODE ID=disable_heater DURATION=0
   HOME_IDLER
   M109 S{printer["gcode_macro PAUSE_MMU"].extruder_temp}

[delayed_gcode disable_heater]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int != 0 %}
    M118 Disable extruder heater
    M104 S0
    {% endif %}

[gcode_macro GO_TO_PARKING]
gcode:
    G91
    G1 X{printer["gcode_macro VAR_MMU2S"].pause_x} Y{printer["gcode_macro VAR_MMU2S"].pause_y} F3000
    G90

[gcode_macro GO_TO_PARKING_OUT]
gcode:
    G91
    G1 X{printer["gcode_macro VAR_MMU2S"].pause_x_out} Y{printer["gcode_macro VAR_MMU2S"].pause_y_out} F3000
    G90

# Pause the MMU
# Park extruder at parking position
# Save the current state and start delayed stop of the heatbed
# Modify the timeout of the printer accordingly to timeout_pause
[gcode_macro PAUSE_MMU]
variable_is_paused: 0
variable_extruder_temp: 0
gcode:
    SET_GCODE_VARIABLE MACRO=PAUSE_MMU VARIABLE=extruder_temp VALUE={printer.extruder.temperature}
    SET_GCODE_VARIABLE MACRO=PAUSE_MMU VARIABLE=is_paused VALUE=1
    SAVE_GCODE_STATE NAME=PAUSE_MMU_state
    SET_IDLE_TIMEOUT TIMEOUT={printer["gcode_macro VAR_MMU2S"].timeout_pause}
    UPDATE_DELAYED_GCODE ID=disable_heater DURATION={printer["gcode_macro VAR_MMU2S"].disable_heater}
    M118 START PAUSE
    MMU_ERROR_INCREMENT_PAUSE
    bip
    bip
    bip
    PAUSE
    G4 P2000
    M400
    G91
    G1 Z{printer["gcode_macro VAR_MMU2S"].pause_z}
    G90
    G1 X{printer["gcode_macro VAR_MMU2S"].pause_x} Y{printer["gcode_macro VAR_MMU2S"].pause_y} F3000
    bip
    bip
    bip
    M118 END PAUSE
    RESTORE_GCODE_STATE NAME=PAUSE_MMU_state MOVE=1

# Macro to CORRECTLY RESUME with MMU check.
[gcode_macro RESUME_MMU]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        {% if printer["filament_switch_sensor ir_sensor"].filament_detected == true %}
            M118 Resume print ...
            RESUME
        {% else %}
            M118 Filament not in extruder, could not resume
        {% endif %}
    {% else %}
        M118 Unlock MMU before resuming !
    {% endif %}

############################################
#
# K0, K1, ..., K4 : CUT Filament Macros
#
############################################

[gcode_macro K0]
gcode:
    M117 Cut Filament 0
    {% if printer["gcode_macro SELECT_TOOL"].color_selected|int != 0 %}
            # move selector to right a little bit
            MMU_MANUAL_STEPPER STEPPER=idler_stepper MOVE={printer["gcode_macro VAR_MMU2S"].idler[0]}
            MMU_MANUAL_STEPPER STEPPER=selector_stepper MOVE={printer["gcode_macro VAR_MMU2S"].colorselector[1]}
            # move filament out a bit
            MMU_MANUAL_STEPPER STEPPER=gear_stepper SET_POSITION=0
            MMU_MANUAL_STEPPER STEPPER=gear_stepper MOVE=8
            # raise current for torque to cut filament
            SET_TMC_CURRENT STEPPER=selector_stepper CURRENT=1.00 HOLDCURRENT=0.400    
            INIT_TMC STEPPER=selector_stepper
            MMU_MANUAL_STEPPER STEPPER=selector_stepper MOVE={printer["gcode_macro VAR_MMU2S"].colorselector[0]}
            # reset current
            SET_TMC_CURRENT STEPPER=selector_stepper CURRENT=0.400 HOLDCURRENT=0.200
            # home selector after
            INIT_TMC STEPPER=selector_stepper
            HOME_SELECTOR
            # move back 
            MMU_MANUAL_STEPPER STEPPER=selector_stepper MOVE={printer["gcode_macro VAR_MMU2S"].colorselector[0]}
    {% else %}
        M117 ERROR K0
    {% endif %}

[gcode_macro K1]
gcode:
    M117 Cut Filament 1
    {% if printer["gcode_macro SELECT_TOOL"].color_selected|int != 0 %}
            # move selector to right a little bit
            MMU_MANUAL_STEPPER STEPPER=idler_stepper MOVE={printer["gcode_macro VAR_MMU2S"].idler[1]}
            MMU_MANUAL_STEPPER STEPPER=selector_stepper MOVE={printer["gcode_macro VAR_MMU2S"].colorselector[2]}
            # move filament out a bit
            MMU_MANUAL_STEPPER STEPPER=gear_stepper SET_POSITION=0
            MMU_MANUAL_STEPPER STEPPER=gear_stepper MOVE=8
            # raise current for torque to cut filament
            SET_TMC_CURRENT STEPPER=selector_stepper CURRENT=1.00 HOLDCURRENT=0.400    
            INIT_TMC STEPPER=selector_stepper
            MMU_MANUAL_STEPPER STEPPER=selector_stepper MOVE={printer["gcode_macro VAR_MMU2S"].colorselector[0]}
            # reset current
            SET_TMC_CURRENT STEPPER=selector_stepper CURRENT=0.400 HOLDCURRENT=0.200
            # home selector after
            INIT_TMC STEPPER=selector_stepper
            HOME_SELECTOR
            # move back 
            MMU_MANUAL_STEPPER STEPPER=selector_stepper MOVE={printer["gcode_macro VAR_MMU2S"].colorselector[1]}
    {% else %}
        M117 ERROR K1
    {% endif %}

[gcode_macro K2]
gcode:
    M117 Cut Filament 2
    {% if printer["gcode_macro SELECT_TOOL"].color_selected|int != 0 %}
            # move selector to right a little bit
            MMU_MANUAL_STEPPER STEPPER=idler_stepper MOVE={printer["gcode_macro VAR_MMU2S"].idler[2]}
            MMU_MANUAL_STEPPER STEPPER=selector_stepper MOVE={printer["gcode_macro VAR_MMU2S"].colorselector[3]}
            # move filament out a bit
            MMU_MANUAL_STEPPER STEPPER=gear_stepper SET_POSITION=0
            MMU_MANUAL_STEPPER STEPPER=gear_stepper MOVE=8
            # raise current for torque to cut filament
            SET_TMC_CURRENT STEPPER=selector_stepper CURRENT=1.00 HOLDCURRENT=0.400    
            INIT_TMC STEPPER=selector_stepper
            MMU_MANUAL_STEPPER STEPPER=selector_stepper MOVE={printer["gcode_macro VAR_MMU2S"].colorselector[0]}
            # reset current
            SET_TMC_CURRENT STEPPER=selector_stepper CURRENT=0.400 HOLDCURRENT=0.200
            # home selector after
            INIT_TMC STEPPER=selector_stepper
            HOME_SELECTOR
            # move back 
            MMU_MANUAL_STEPPER STEPPER=selector_stepper MOVE={printer["gcode_macro VAR_MMU2S"].colorselector[2]}
    {% else %}
        M117 ERROR K2
    {% endif %}

[gcode_macro K3]
gcode:
    M117 Cut Filament 3
    {% if printer["gcode_macro SELECT_TOOL"].color_selected|int != 0 %}
            # move selector to right a little bit
            MMU_MANUAL_STEPPER STEPPER=idler_stepper MOVE={printer["gcode_macro VAR_MMU2S"].idler[3]}
            MMU_MANUAL_STEPPER STEPPER=selector_stepper MOVE={printer["gcode_macro VAR_MMU2S"].colorselector[4]}
            # move filament out a bit
            MMU_MANUAL_STEPPER STEPPER=gear_stepper SET_POSITION=0
            MMU_MANUAL_STEPPER STEPPER=gear_stepper MOVE=8
            # raise current for torque to cut filament
            SET_TMC_CURRENT STEPPER=selector_stepper CURRENT=1.00 HOLDCURRENT=0.400    
            INIT_TMC STEPPER=selector_stepper
            MMU_MANUAL_STEPPER STEPPER=selector_stepper MOVE={printer["gcode_macro VAR_MMU2S"].colorselector[0]}
            # reset current
            SET_TMC_CURRENT STEPPER=selector_stepper CURRENT=0.400 HOLDCURRENT=0.200
            # home selector after
            INIT_TMC STEPPER=selector_stepper
            HOME_SELECTOR
            # move back 
            MMU_MANUAL_STEPPER STEPPER=selector_stepper MOVE={printer["gcode_macro VAR_MMU2S"].colorselector[3]}
    {% else %}
        M117 ERROR K3
    {% endif %}

[gcode_macro K4]
gcode:
    M117 Cut Filament 4
    {% if printer["gcode_macro SELECT_TOOL"].color_selected|int != 0 %}
            # move selector to right a little bit
            MMU_MANUAL_STEPPER STEPPER=idler_stepper MOVE={printer["gcode_macro VAR_MMU2S"].idler[4]}
            MMU_MANUAL_STEPPER STEPPER=selector_stepper MOVE=0
            # move filament out a bit
            MMU_MANUAL_STEPPER STEPPER=gear_stepper SET_POSITION=0
            MMU_MANUAL_STEPPER STEPPER=gear_stepper MOVE=8
            # raise current for torque to cut filament
            SET_TMC_CURRENT STEPPER=selector_stepper CURRENT=1.00 HOLDCURRENT=0.400    
            INIT_TMC STEPPER=selector_stepper
            MMU_MANUAL_STEPPER STEPPER=selector_stepper MOVE={printer["gcode_macro VAR_MMU2S"].colorselector[0]}
            # reset current
            SET_TMC_CURRENT STEPPER=selector_stepper CURRENT=0.400 HOLDCURRENT=0.200
            # home selector after
            INIT_TMC STEPPER=selector_stepper
            HOME_SELECTOR
            # move back 
            MMU_MANUAL_STEPPER STEPPER=selector_stepper MOVE={printer["gcode_macro VAR_MMU2S"].colorselector[4]}
    {% else %}
        M117 ERROR K4
    {% endif %}

############################################
#
# T0, T1, ..., T4 : Change extruder MACRO
# if th new extruder is different from the current extruder :
#     eject the filament if needed
#     load the new one
#
############################################

[gcode_macro T0]
gcode:
    M117 Change Tool T0
    {% if printer["gcode_macro SELECT_TOOL"].color_selected|int != 0 %}
        UT
        LT VALUE=0
    {% else %}
        M117 No change needed
    {% endif %}

[gcode_macro T1]
gcode:
    M117 Change Tool T1
    {% if printer["gcode_macro SELECT_TOOL"].color_selected|int != 1 %}
        UT
        LT VALUE=1
    {% else %}
        M117 No change needed
    {% endif %}

[gcode_macro T2]
gcode:
    M117 Change Tool T2
    {% if printer["gcode_macro SELECT_TOOL"].color_selected|int != 2 %}
        UT
        LT VALUE=2
    {% else %}
        M117 No change needed
    {% endif %}

[gcode_macro T3]
gcode:
    M117 Change Tool T3
    {% if printer["gcode_macro SELECT_TOOL"].color_selected|int != 3 %}
        UT
        LT VALUE=3
    {% else %}
        M117 No change needed
    {% endif %}

[gcode_macro T4]
gcode:
    M117 Change Tool T4
    {% if printer["gcode_macro SELECT_TOOL"].color_selected|int != 4 %}
        UT
        LT VALUE=4
    {% else %}
        M117 No change needed
    {% endif %}

############################################
#
# Unloading/Loading Macros
#
############################################

# Load filament from MMU2S to nozzle
[gcode_macro LT]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        M118 LT {params.VALUE|int} ...
        SELECT_TOOL VALUE={params.VALUE|int}
        LOAD_FILAMENT_TO_EXTRUDER
        LOAD_FILAMENT_IN_EXTRUDER
    {% endif %}

# Unload filament from nozzle to MMU2S
[gcode_macro UT]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        {% if printer["gcode_macro SELECT_TOOL"].color_selected|int != -1 %}
            M118 UT {printer["gcode_macro SELECT_TOOL"].color_selected|int} ...
            SELECT_TOOL VALUE={printer["gcode_macro SELECT_TOOL"].color_selected|int}
            UNLOAD_FILAMENT_IN_EXTRUDER
            #SELECT_TOOL VALUE={printer["gcode_macro SELECT_TOOL"].color_selected|int}
            UNLOAD_FILAMENT_FROM_EXTRUDER
        {% endif %}
    {% endif %}

############################################
#
# Select/Unselect a tool
# move the idler and the color selector (if needed) to the requested tool (0-4)
#
############################################

# Select a tool. move the idler and then move the color selector (if needed)
[gcode_macro SELECT_TOOL]
variable_tool_selected: -1
variable_color_selected: -1
variable_old_color_selected: -1
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        {% if printer["gcode_macro HOME_MMU"].home != -1 %}
            M118 Select Tool {params.VALUE} ...
            MMU_MANUAL_STEPPER STEPPER=idler_stepper MOVE={printer["gcode_macro VAR_MMU2S"].idler[params.VALUE|int]}
            MMU_MANUAL_STEPPER STEPPER=selector_stepper MOVE={printer["gcode_macro VAR_MMU2S"].colorselector[params.VALUE|int]}
            SET_GCODE_VARIABLE MACRO=SELECT_TOOL VARIABLE=tool_selected VALUE={params.VALUE}
            SET_GCODE_VARIABLE MACRO=SELECT_TOOL VARIABLE=old_color_selected VALUE={color_selected}
            SET_GCODE_VARIABLE MACRO=SELECT_TOOL VARIABLE=color_selected VALUE={params.VALUE}
            M118 Tool {params.VALUE} Enabled
        {% else %}
            M118 Could not select tool, MMU is not homed
        {% endif %}
    {% endif %}

# Unselect a tool, only park the idler
[gcode_macro UNSELECT_TOOL]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        {% if printer["gcode_macro HOME_MMU"].home != -1 %}
            MMU_MANUAL_STEPPER STEPPER=idler_stepper MOVE={printer["gcode_macro VAR_MMU2S"].idler_home_position}
            SET_GCODE_VARIABLE MACRO=SELECT_TOOL VARIABLE=tool_selected VALUE=-1
        {% else %}
            M118 Could not unselect tool, MMU is not homed
        {% endif %}
    {% endif %}

############################################
#
# Loading/Unloading part FROM/TO EXTRUDER TO/FROM NOZZLE
# During loading, if the IR sensor does not detect the filament, it tries 3 times to reinsert it
#
############################################

# VERIFY if filament is correctly loaded
[gcode_macro CHECK_LOAD_FILAMENT_IN_EXTRUDER]
variable_filament_in: 0
gcode:
    {% if printer["gcode_macro CHECK_LOAD_FILAMENT_IN_EXTRUDER"].filament_in|int == 0 %}
        {% if printer["filament_switch_sensor ir_sensor"].filament_detected == true %}
            M118 Check if filament is loaded
            G91
            G92 E0
            MMU_MANUAL_STEPPER STEPPER=gear_stepper MOVE=10 SPEED=10 SET_POSITION=0 SYNC=0
            G1 E10 F600
            MMU_MANUAL_STEPPER STEPPER=gear_stepper SYNC=1
            MMU_MANUAL_STEPPER STEPPER=gear_stepper SET_POSITION=0
            MMU_MANUAL_STEPPER STEPPER=gear_stepper MOVE=-{printer["gcode_macro VAR_MMU2S"].load_in_extruder - 10} SPEED=10 SET_POSITION=0 SYNC=0
            G1 E-{printer["gcode_macro VAR_MMU2S"].load_in_extruder - 10} F600
            MMU_MANUAL_STEPPER STEPPER=gear_stepper SYNC=1
            MMU_MANUAL_STEPPER STEPPER=gear_stepper SET_POSITION=0
            G92 E0
            G90
            G4 P1000
        {% endif %}
        RETRY_LOAD_FILAMENT_IN_EXTRUDER
    {% endif %}

# Try to reinsert the filament into the extruder
# Called when the IR sensor does not detect the filament
# the MMU2S push the filament of 10mm
# and the extruder gear try to insert it into the nozzle
[gcode_macro RETRY_LOAD_FILAMENT_IN_EXTRUDER]
gcode:
    {% if printer["filament_switch_sensor ir_sensor"].filament_detected == false %}
        M118 Retry loading ....
        {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
            {% if printer.extruder.temperature > printer["gcode_macro VAR_MMU2S"].min_temp_extruder %}
                M118 Loading Filament...
                MMU_ERROR_INCREMENT_LOAD
                G90
                GO_TO_PARKING
                G91
                G92 E0
                MMU_MANUAL_STEPPER STEPPER=gear_stepper MOVE={printer["gcode_macro VAR_MMU2S"].load_in_extruder} SPEED=10 SET_POSITION=0 SYNC=0
                G1 E{printer["gcode_macro VAR_MMU2S"].load_in_extruder} F600
                MMU_MANUAL_STEPPER STEPPER=gear_stepper SYNC=1
                MMU_MANUAL_STEPPER STEPPER=gear_stepper SET_POSITION=0
                G92 E0
                G90
            {% endif %}
        {% endif %}
        G4 P1000
    {% else %}
        M118 Filament in extruder : OK
        G91
        G92 E0
        SET_GCODE_VARIABLE MACRO=CHECK_LOAD_FILAMENT_IN_EXTRUDER VARIABLE=filament_in VALUE=1
        MMU_MANUAL_STEPPER STEPPER=gear_stepper MOVE={printer["gcode_macro VAR_MMU2S"].load_in_extruder} SPEED=10 SET_POSITION=0 SYNC=0
        G1 E{printer["gcode_macro VAR_MMU2S"].load_in_extruder - 10} F600
        MMU_MANUAL_STEPPER STEPPER=gear_stepper SYNC=1
        MMU_MANUAL_STEPPER STEPPER=gear_stepper SET_POSITION=0
        G92 E0
    	G90   
    {% endif %}

# Load the filament into the extruder
# the MMU2S push the filament of 20mm
# and the extruder gear try to insert it into the nozzle
# if the filament is not detected by the IR, call RETRY_LOAD_FILAMENT_IN_EXTRUDER 3 times
#
# Call PAUSE_MMU if the filament is not detected by the IR sensor
[gcode_macro LOAD_FILAMENT_IN_EXTRUDER]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        {% if printer.extruder.temperature > printer["gcode_macro VAR_MMU2S"].min_temp_extruder %}
            M118 Loading Filament...
            # move idler out of way
            # MMU_MANUAL_STEPPER STEPPER=idler_stepper MOVE={printer["gcode_macro VAR_MMU2S"].idler_home_position}
            SET_GCODE_VARIABLE MACRO=CHECK_LOAD_FILAMENT_IN_EXTRUDER VARIABLE=filament_in VALUE=0
            G91
            G92 E0
            MMU_MANUAL_STEPPER STEPPER=gear_stepper MOVE={printer["gcode_macro VAR_MMU2S"].load_in_extruder} SPEED=10 SET_POSITION=0 SYNC=0
            G1 E{printer["gcode_macro VAR_MMU2S"].load_in_extruder} F600
            MMU_MANUAL_STEPPER STEPPER=gear_stepper SYNC=1
            MMU_MANUAL_STEPPER STEPPER=gear_stepper SET_POSITION=0
            G92 E0
            G90
            G4 P1000
            CHECK_LOAD_FILAMENT_IN_EXTRUDER
            CHECK_LOAD_FILAMENT_IN_EXTRUDER
            CHECK_LOAD_FILAMENT_IN_EXTRUDER
            IS_FILAMENT_IN_EXTRUDER
            UNSELECT_TOOL
            # PURGE_FILAMENT
            M118 Load Complete
        {% else %}
            M118 Extruder too cold
            PAUSE_MMU
        {% endif %}
    {% endif %}

# Retry unload, try correct misalignement of bondtech gear
[gcode_macro RETRY_UNLOAD_FILAMENT_IN_EXTRUDER]
gcode:
    {% if printer["filament_switch_sensor ir_sensor"].filament_detected == true %}
        M118 Retry unloading extruder....
        {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
            {% if printer.extruder.temperature > printer["gcode_macro VAR_MMU2S"].min_temp_extruder %}
                M118 Unloading Filament extruder ...
                MMU_ERROR_INCREMENT_UNLOAD
                G91
                G92 E0
                MMU_MANUAL_STEPPER STEPPER=gear_stepper MOVE=10 SPEED=10 SET_POSITION=0 SYNC=0
                G1 E10 F600
                MMU_MANUAL_STEPPER STEPPER=gear_stepper SYNC=1
                MMU_MANUAL_STEPPER STEPPER=gear_stepper MOVE=-{printer["gcode_macro VAR_MMU2S"].unload_in_extruder1} SPEED=10 SET_POSITION=0 SYNC=0
                G1 E-{printer["gcode_macro VAR_MMU2S"].unload_in_extruder1} F600
                MMU_MANUAL_STEPPER STEPPER=gear_stepper SYNC=1
                MMU_MANUAL_STEPPER STEPPER=gear_stepper MOVE=-{printer["gcode_macro VAR_MMU2S"].unload_in_extruder2} SPEED=50 SET_POSITION=0 SYNC=0
                G1 E-{printer["gcode_macro VAR_MMU2S"].unload_in_extruder2} F3000
                MMU_MANUAL_STEPPER STEPPER=gear_stepper SYNC=1
                MMU_MANUAL_STEPPER STEPPER=gear_stepper SET_POSITION=0
                G92 E0
                G90
            {% endif %}
        {% endif %}
    {% endif %}

# Unload the filament from the nozzle (without RAMMING !!!)
# Retract the filament from the nozzle to the out of the extruder gear
#
# Call PAUSE_MMU if the IR sensor detects the filament after the ejection
[gcode_macro UNLOAD_FILAMENT_IN_EXTRUDER]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        {% if printer.extruder.temperature > printer["gcode_macro VAR_MMU2S"].min_temp_extruder %}
            M118 Unloading Filament...
            #UNLOAD_FILAMENT
            G91
            MMU_MANUAL_STEPPER STEPPER=gear_stepper MOVE=-{printer["gcode_macro VAR_MMU2S"].unload_in_extruder1} SPEED=10 SET_POSITION=0 SYNC=0
            G1 E-{printer["gcode_macro VAR_MMU2S"].unload_in_extruder1} F600
            MMU_MANUAL_STEPPER STEPPER=gear_stepper SYNC=1
            MMU_MANUAL_STEPPER STEPPER=gear_stepper MOVE=-{printer["gcode_macro VAR_MMU2S"].unload_in_extruder2} SPEED=50 SET_POSITION=0 SYNC=0
            G1 E-{printer["gcode_macro VAR_MMU2S"].unload_in_extruder2} F3000
            MMU_MANUAL_STEPPER STEPPER=gear_stepper SYNC=1
            MMU_MANUAL_STEPPER STEPPER=gear_stepper SET_POSITION=0
            G90
            G92 E0
            G4 P1000
            RETRY_UNLOAD_FILAMENT_IN_EXTRUDER
            RETRY_UNLOAD_FILAMENT_IN_EXTRUDER
            RETRY_UNLOAD_FILAMENT_IN_EXTRUDER
            IS_FILAMENT_STUCK_IN_EXTRUDER
            M118 Filament removed
        {% else %}
            M118 Extruder too cold
            PAUSE_MMU
        {% endif %}
    {% endif %}



# Ramming process for standart PLA, code extracted from slic3r gcode
[gcode_macro RAMMING_SLICER]
gcode:
    G91
    G92 E0
    G1 E0.6873 F165
    G1 E0.7007 F168
    G1 E0.7376 F177
    G1 E0.7879 F189
    G1 E0.8214 F197
    G1 E0.8483 F204
    G1 E0.9019 F216
    G1 E0.9757 F234
    G1 E1.0260 F246
    G1 E1.0427 F250
    G1 E-15.000 F6000.0
    G1 E-24.5000 F5400.0
    G1 E-7.0000 F2700.0
    G1 E-3.5000 F1620.0
    G1 E20.000 F180.0
    G1 E-20.000 F160.0
    G1 E20.000 F140.0
    G1 E-20.000 F120.0
    G1 E-50.0000 F2000
    G92 E0

# Unload from extruder with ramming
[gcode_macro UNLOAD_FILAMENT_IN_EXTRUDER_WITH_RAMMING]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        {% if printer.extruder.temperature > printer["gcode_macro VAR_MMU2S"].min_temp_extruder %}
            {% if printer["gcode_macro SELECT_TOOL"].tool_selected|int == -1 %}
                M118 Ramming and Unloading Filament...
                G91
                RAMMING_SLICER
                UNLOAD_FILAMENT_IN_EXTRUDER
                M118 Filament rammed and removed
            {% else %}
                M118 Tool selected, UNSELECT it
                PAUSE_MMU
            {% endif %}
        {% else %}
            M118 Extruder too cold
            PAUSE_MMU
        {% endif %}
    {% endif %}

############################################
#
# Loading/Unloading MACROS from MMU2S to the enter of the extruder gear
#
############################################

# Load filament until the FINDA detect it and push it 10mm more to be sure is well detected
#
# PAUSE_MMU is called if the FINDA does not detect the filament
[gcode_macro LOAD_FILAMENT_TO_FINDA]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        {% if printer["gcode_macro SELECT_TOOL"].tool_selected|int != -1 %}
            M118 Loading filament to FINDA ...
            MMU_MANUAL_STEPPER STEPPER=gear_stepper SET_POSITION=0
            MMU_MANUAL_STEPPER STEPPER=gear_stepper MOVE={printer["gcode_macro VAR_MMU2S"].FINDA_load_length} STOP_ON_ENDSTOP=2
            MMU_MANUAL_STEPPER STEPPER=gear_stepper SET_POSITION=0
            MMU_MANUAL_STEPPER STEPPER=gear_stepper MOVE=10
            IS_FILAMENT_IN_FINDA
            M118 Loading done to FINDA
        {% else %}
            M118 Cannot load to FINDA, tool not selected !!
        {% endif %}
    {% endif %}

# Load from the FINDA to the extruder gear
[gcode_macro LOAD_FILAMENT_FROM_FINDA_TO_EXTRUDER]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        {% if printer["gcode_macro SELECT_TOOL"].tool_selected|int != -1 %}
            M118 Loading filament from FINDA to extruder ...
            G91
            G92 E0
            MMU_MANUAL_STEPPER STEPPER=gear_stepper SET_POSITION=0
            MMU_MANUAL_STEPPER STEPPER=gear_stepper MOVE={printer["gcode_macro VAR_MMU2S"].bowden_load_length1} SPEED=90 ACCEL=80
            MMU_MANUAL_STEPPER STEPPER=gear_stepper MOVE={printer["gcode_macro VAR_MMU2S"].bowden_load_length2} SPEED=60 ACCEL=80 SET_POSITION=0 SYNC=0
            G1 E{printer["gcode_macro VAR_MMU2S"].bowden_load_length2} F1200
            MMU_MANUAL_STEPPER STEPPER=gear_stepper SYNC=1
            MMU_MANUAL_STEPPER STEPPER=gear_stepper SET_POSITION=0
            G92 E0
            M118 Loading done from FINDA to extruder
        {% else %}
            M118 Cannot load to extruder, tool not selected !!
        {% endif %}
    {% endif %}

# Load from MMU2S to extruder gear by calling LOAD_FILAMENT_TO_FINDA and next LOAD_FILAMENT_FROM_FINDA_TO_EXTRUDER
#
# PAUSE_MMU is called if the FINDA does not detect the filament
[gcode_macro LOAD_FILAMENT_TO_EXTRUDER]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        {% if printer["gcode_macro SELECT_TOOL"].tool_selected|int != -1 %}
            M118 Loading filament from MMU to extruder ...
            LOAD_FILAMENT_TO_FINDA
            LOAD_FILAMENT_FROM_FINDA_TO_EXTRUDER
            M118 Loading done from MMU to extruder
        {% else %}
            M118 Cannot load to extruder, tool not selected !!
        {% endif %}
    {% endif %}


# Unload filament until the FINDA detect it and push it -10mm more to be sure is well not detected
#
# PAUSE_MMU is called if the FINDA does detect the filament
# THIS IS CALLED AFTER UNLOADING FROM BOWDEN (EXTRUDER TO FINDA == FINDA IS OFF AT THIS POINT)
[gcode_macro UNLOAD_FILAMENT_FROM_FINDA]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        {% if printer["gcode_macro SELECT_TOOL"].tool_selected|int != -1 %}
            M118 Unloading filament from FINDA ...
            MMU_MANUAL_STEPPER STEPPER=gear_stepper SET_POSITION=0
            MMU_MANUAL_STEPPER STEPPER=gear_stepper MOVE=-{printer["gcode_macro VAR_MMU2S"].FINDA_unload_length}
            MMU_MANUAL_STEPPER STEPPER=gear_stepper SET_POSITION=0
            MMU_MANUAL_STEPPER STEPPER=gear_stepper MOVE=-10
            MMU_MANUAL_STEPPER STEPPER=gear_stepper SET_POSITION=0
            IS_FILAMENT_STUCK_IN_FINDA
            SET_GCODE_VARIABLE MACRO=SELECT_TOOL VARIABLE=color_selected VALUE=-1
            M118 Unloading done from FINDA
        {% else %}
            M118 Cannot unload from FINDA, tool not selected !!
        {% endif %}
    {% endif %}

# Unload from extruder gear to the FINDA
[gcode_macro UNLOAD_FILAMENT_FROM_EXTRUDER_TO_FINDA]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        {% if printer["gcode_macro SELECT_TOOL"].tool_selected|int != -1 %}
            M118 Unloading filament from extruder to FINDA ...
            MMU_MANUAL_STEPPER STEPPER=gear_stepper SET_POSITION=0
            MMU_MANUAL_STEPPER STEPPER=gear_stepper MOVE=-{printer["gcode_macro VAR_MMU2S"].bowden_unload_length} SPEED=90 STOP_ON_ENDSTOP=-2
            IS_FILAMENT_STUCK_IN_FINDA
            M118 Unloading done from FINDA to extruder
        {% else %}
            M118 Cannot unload from extruder to FINDA, tool not selected !!
        {% endif %}
    {% endif %}

# Unload from the extruder gear to the MMU2S by calling UNLOAD_FILAMENT_FROM_EXTRUDER_TO_FINDA and next UNLOAD_FILAMENT_FROM_FINDA
[gcode_macro UNLOAD_FILAMENT_FROM_EXTRUDER]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        {% if printer["gcode_macro SELECT_TOOL"].tool_selected|int != -1 %}
            M118 Unloading filament from extruder to MMU ...
            UNLOAD_FILAMENT_FROM_EXTRUDER_TO_FINDA
            UNLOAD_FILAMENT_FROM_FINDA
            M118 Unloading done from extruder to MMU
        {% else %}
            M118 Cannot unload from extruder to MMU, tool not selected !!
        {% endif %}
    {% endif %}

############################################
#
# Endstop check MACROS
# Verify the state of the FINDA or the IR sensor
#
############################################

# Call PAUSE_MMU if the filament is not detected by the IR sensor
[gcode_macro IS_FILAMENT_IN_EXTRUDER]
gcode:
    {% if printer["filament_switch_sensor ir_sensor"].filament_detected == true %}
        M118 Filament in extruder
    {% else %}
        M118 Filament not in extruder
        PAUSE_MMU
    {% endif %}

# Call PAUSE_MMU if the filament is not detected by the FINDA
[gcode_macro IS_FILAMENT_IN_FINDA]
gcode:
    QUERY_ENDSTOPS
    IS_IN_FINDA

[gcode_macro IS_IN_FINDA]
gcode:
    {% if printer.query_endstops.last_query["manual_stepper gear_stepper"] == 1 %}
        M118 Filament in FINDA
    {% else %}
        M118 Filament not in FINDA
        PAUSE_MMU
    {% endif %}


# Call PAUSE_MMU if the filament is detected by the IR sensor
[gcode_macro IS_FILAMENT_STUCK_IN_EXTRUDER]
gcode:
    {% if printer["filament_switch_sensor ir_sensor"].filament_detected == true %}
        M118 Filament stuck in extruder
        PAUSE_MMU
    {% else %}
        M118 Filament not in extruder
    {% endif %}

# Call PAUSE_MMU if the filament is detected by the FINDA
[gcode_macro IS_FILAMENT_STUCK_IN_FINDA]
gcode:
     QUERY_ENDSTOPS
     IS_STUCK_IN_FINDA

[gcode_macro IS_STUCK_IN_FINDA]
gcode:
    {% if printer.query_endstops.last_query["manual_stepper gear_stepper"] == 1 %}
        M118 Filament stuck in FINDA
        PAUSE_MMU
    {% else %}
        M118 Filament not in FINDA
    {% endif %}

# Call PAUSE_MMU if the filament is detected by the splitter IR sensor
[gcode_macro IS_FILAMENT_STUCK_IN_SPLITTER]
gcode:
    {% if printer["filament_switch_sensor splitter_sensor"].filament_detected == true %}
        M118 Filament stuck in splitter
        PAUSE_MMU
    {% else %}
        M118 Filament not in splitter
    {% endif %}

############################################
#
# M702 macro called by the end-gcode to eject the filament at the end of the print
#
############################################

# Eject the filament with ramming from the extruder nozzle to the MMU2S
[gcode_macro EJECT_RAMMING]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        {% if printer["gcode_macro SELECT_TOOL"].color_selected|int != -1 %}
            M118 UT {printer["gcode_macro SELECT_TOOL"].color_selected|int} ...
            UNLOAD_FILAMENT_IN_EXTRUDER_WITH_RAMMING
            SELECT_TOOL VALUE={printer["gcode_macro SELECT_TOOL"].color_selected|int}
            UNLOAD_FILAMENT_FROM_EXTRUDER
        {% endif %}
    {% endif %}

# M702 first part
# unload filament if inserted into the IR sensor
[gcode_macro M702]
gcode:
    G91
    G1 Z{printer["gcode_macro VAR_MMU2S"].pause_z}
    G90
    G1 X{printer["gcode_macro VAR_MMU2S"].pause_x} Y{printer["gcode_macro VAR_MMU2S"].pause_y} F3000
    UT
    QUERY_ENDSTOPS
    END_M702

# M702 second part
# Unselect the current tool
[gcode_macro END_M702]
gcode:
    {% if printer.query_endstops.last_query["manual_stepper gear_stepper"] != 1 %}
        UNSELECT_TOOL
        M118 M702 ok ...
    {% else %}
        M118 M702 Error !!!
    {% endif %}


############################################
#
# MACROS called during homing to try to eject the filament if loaded
#
############################################

# Preheat the heater if needed and unload the filament with ramming
# eject from nozzle to extruder gear out
[gcode_macro EJECT_FROM_EXTRUDER]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        {% if printer["filament_switch_sensor ir_sensor"].filament_detected == true %}
            M118 Filament in extruder, trying to eject it ..
            M118 Preheat Nozzle
            M109 S{printer["gcode_macro VAR_MMU2S"].extruder_eject_temp}
            UNLOAD_FILAMENT_IN_EXTRUDER_WITH_RAMMING
            M104 S0
        {% else %}
            M118 Filament not in extruder
        {% endif %}
    {% endif %}

[gcode_macro EJECT_FROM_BOWDEN]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        {% if printer.query_endstops.last_query["manual_stepper gear_stepper"] == 1 %}
            M118 Filament in bowden/FINDA, trying to eject it ..
            MMU_MANUAL_STEPPER STEPPER=gear_stepper SET_POSITION=0
            MMU_MANUAL_STEPPER STEPPER=gear_stepper MOVE=-{printer["gcode_macro VAR_MMU2S"].bowden_unload_length} SPEED=90 STOP_ON_ENDSTOP=-2
            MMU_MANUAL_STEPPER STEPPER=gear_stepper SET_POSITION=0
            MMU_MANUAL_STEPPER STEPPER=gear_stepper MOVE=-{printer["gcode_macro VAR_MMU2S"].FINDA_unload_length}
            MMU_MANUAL_STEPPER STEPPER=gear_stepper SET_POSITION=0
            MMU_MANUAL_STEPPER STEPPER=gear_stepper MOVE=-10
            MMU_MANUAL_STEPPER STEPPER=gear_stepper SET_POSITION=0
        {% else %}
            M118 Filament not in extruder
        {% endif %}
    {% endif %}

# Eject from extruder gear to MMU2S
[gcode_macro EJECT_BEFORE_HOME]
gcode:
    M118 Eject Filament if loaded ...
    {% if printer["filament_switch_sensor ir_sensor"].filament_detected == true %}
        EJECT_FROM_EXTRUDER
        IS_FILAMENT_STUCK_IN_EXTRUDER
    {% endif %}
    ENDSTOPS_STATUS
    {% if printer.query_endstops.last_query["manual_stepper gear_stepper"] == 1 %}
        EJECT_FROM_BOWDEN
        IS_FILAMENT_STUCK_IN_FINDA
        M118 Filament ejected !
    {% else %}
        M118 Filament already ejected !
    {% endif %}

############################################
#
# Homing MACROS
# HOME_MMU must be called before using the MMU2S
#
############################################

# Home MMU if not homed
[gcode_macro HOME_MMU]
variable_home: -1
gcode:
    {% if printer["gcode_macro HOME_MMU"].home == -1 %}
        FORCE_HOME_MMU
    {% else %}
        M118 MMU already homed !
        MMU_UNLOCK
    {% endif %}

# Home the MMU
# eject filament if loaded with EJECT_BEFORE_HOME
# next home the mmu with HOME_MMU_ONLY
[gcode_macro FORCE_HOME_MMU]
gcode:
    SET_FILAMENT_SENSOR SENSOR=ir_sensor ENABLE=0
    SET_GCODE_VARIABLE MACRO=HOME_MMU VARIABLE=home VALUE=1
    M118 Homing MMU ...
    QUERY_ENDSTOPS
    EJECT_BEFORE_HOME
    HOME_MMU_ONLY

# Home the idler
[gcode_macro HOME_IDLER]
gcode:
    M118 Homing idler
    MMU_MANUAL_STEPPER STEPPER=idler_stepper SET_POSITION=0
    MMU_MANUAL_STEPPER STEPPER=idler_stepper MOVE=7
    {% if printer["gcode_macro VAR_MMU2S"].tmc2209_sensorless ==  0 %}
        MMU_MANUAL_STEPPER STEPPER=idler_stepper MOVE=-95
    {% else %}
        G4 P2000
        MMU_MANUAL_STEPPER STEPPER=idler_stepper MOVE=-95 STOP_ON_ENDSTOP=1
    {% endif %}
    MMU_MANUAL_STEPPER STEPPER=idler_stepper SET_POSITION=2
    MMU_MANUAL_STEPPER STEPPER=idler_stepper MOVE={printer["gcode_macro VAR_MMU2S"].idler_home_position}

# Home selector
[gcode_macro HOME_SELECTOR]
gcode:
    M118 Homing selector
    MMU_MANUAL_STEPPER STEPPER=selector_stepper SET_POSITION=0
    {% if printer["gcode_macro VAR_MMU2S"].tmc2209_sensorless ==  0 %}
    MMU_MANUAL_STEPPER STEPPER=selector_stepper MOVE=-76
    {% else %}
    G4 P2000
    MMU_MANUAL_STEPPER STEPPER=selector_stepper MOVE=-76 STOP_ON_ENDSTOP=1
    {% endif %}
    MMU_MANUAL_STEPPER STEPPER=selector_stepper SET_POSITION=0

# Home the MMU :
# 1) home the idler
# 2) home the color selector (if needed)
# 3) try to load filament 0 to FINDA and then unload it. Used to verify the MMU2S gear
#
# if all is ok, the MMU2S is ready to be used
[gcode_macro HOME_MMU_ONLY]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        HOME_IDLER
        HOME_SELECTOR
        MMU_MANUAL_STEPPER STEPPER=idler_stepper MOVE=0
        SET_GCODE_VARIABLE MACRO=SELECT_TOOL VARIABLE=tool_selected VALUE=-1
        SET_GCODE_VARIABLE MACRO=SELECT_TOOL VARIABLE=color_selected VALUE=-1
        {% if printer["gcode_macro VAR_MMU2S"].test_tool == 1 %}
            M118 Test idler filament 0
            SELECT_TOOL VALUE=0
            M118 Test load filament 0
            LOAD_FILAMENT_TO_FINDA
            G4 P1000
            MMU_MANUAL_STEPPER STEPPER=gear_stepper MOVE=-10
            UNLOAD_FILAMENT_FROM_FINDA 
        {% endif %}
        UNSELECT_TOOL
        SET_GCODE_VARIABLE MACRO=HOME_MMU VARIABLE=home VALUE=1
        M400
        M118 Homing MMU ended ...
    {% else %}
        M118 Homing MMU failed, MMU is paused, unlock it ...
    {% endif %}

###############################################
###############################################

[gcode_macro START_PRINT_MMU]
default_parameter_BED_TEMP: 60
default_parameter_EXTRUDER_TEMP: 250
default_parameter_LOAD: -1
gcode:
    # metric values
    G21
    # use absolute coordinates
    G90
    # set extruder to relative mode
    M83
    # start with the fan off
    M107
    # home the printer
    G28
    # start bed heating
    M140 S{BED_TEMP}
    # move FINDA in a heating position
    G0 X125 Y105 Z1 F1000
    # set extruder temp to 170°C to avoid filament dripping
    M104 S170
    # move up to have room to clean nozzle if needed
    G0 Z100 F1000
    # set bed temp
    M140 S{BED_TEMP}
    # wait for bed temp
    M190 S{BED_TEMP}
    # home + mesh 
    G29
    # clear pause
    CLEAR_PAUSE
    # zero the extruded length
    G92 E0.0
    # Move the nozzle near the bed
    G1 Z15 F3000
    # set and wait for nozzle/bed to reach temperature
    M104 S{EXTRUDER_TEMP}       ; set extruder temp
    M140 S{BED_TEMP}            ; set bed temp
    M190 S{BED_TEMP}            ; wait for bed temp
    M109 S{EXTRUDER_TEMP}       ; wait for extruder temp
    # Load filament into MMU
    {% if printer["gcode_macro VARS_PRINTER"].enable_mmu|int == 1 %}
    HOME_MMU
    M109 S{EXTRUDER_TEMP}
    #GO_TO_PARKING
    # zero the extruded length
    G92 E0.0
    {% if LOAD|int != -1 %}
        {% if LOAD|int == 0 %}
            T0
        {% endif %}
        {% if LOAD|int == 1 %}
            T1
        {% endif %}
        {% if LOAD|int == 2 %}
            T2
        {% endif %}
        {% if LOAD|int == 3 %}
            T3
        {% endif %}
        {% if LOAD|int == 4 %}
            T4
        {% endif %}
        M400
        G92 E0
    {% endif %}
#    GO_TO_PARKING_OUT
    {% endif %}
    # zero the extruded length
    G92 E0
    # purge line
    G1 Y-3.0 F1000.0
    G1 Z0.4 F1000.0
    G1 X55.0 E8.0 F2000.0
    G1 Z0.3 F1000.0
    G92 E0.0
    G1 X240.0 E25.0  F2200.0
    G1 Y-2.0 F1000.0
    G1 X55.0 E25 F1400.0
    G1 Z0.20 F1000.0
    G1 X5.0 E4.0 F1000.0
    # zero the extruded length
    G92 E0.0 
    # start printing
    G1 F9000
    M117 ->> Printing <<-
    bip

[gcode_macro END_PRINT_MMU]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    # retract the filament a bit before lifting the nozzle to release some of the pressure
    G1 E-1 F300
    # move Z up a bit and retract filament even more
    G1 Z+5 E-2 F9000 
    G90
    G1 X10 Y10 F9000
    {% if printer["gcode_macro VARS_PRINTER"].enable_mmu|int ==1 %}
    M702
    GO_TO_PARKING_OUT
    {% endif %}
    G90
    # the bed to move to the front
    G1 X{printer["gcode_macro VARS_PRINTER"].end_x_pos|int} Y{printer["gcode_macro VARS_PRINTER"].end_y_pos|int} F9000
    # Disable steppers
    M84
    # extruder fan off
    M107
    bip

###############################################
#
# TEST ROUTINES
#
###############################################
[gcode_macro MMU_TEST_LOAD]
gcode:
    G28
    HOME_MMU
    G1 X100 Z100 F2000
    # range = times to load/unload filament
    {% for i in range(10) %} 
        M118 Test {i}
        # range = how many filaments to test
        {% for j in range(2) %} 
            SELECT_TOOL VALUE={j}
            LOAD_FILAMENT_TO_EXTRUDER
            G4 P1000
            SELECT_TOOL VALUE={j}
            UNLOAD_FILAMENT_FROM_EXTRUDER
        {% endfor %}
    {% endfor %}

###############################################